// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/motain/of-catalog/internal/services/prometheusservice (interfaces: PrometheusServiceInterface)

// Package prometheusservice is a generated GoMock package.
package prometheusservice

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	model "github.com/prometheus/common/model"
)

// MockPrometheusServiceInterface is a mock of PrometheusServiceInterface interface.
type MockPrometheusServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockPrometheusServiceInterfaceMockRecorder
}

// MockPrometheusServiceInterfaceMockRecorder is the mock recorder for MockPrometheusServiceInterface.
type MockPrometheusServiceInterfaceMockRecorder struct {
	mock *MockPrometheusServiceInterface
}

// NewMockPrometheusServiceInterface creates a new mock instance.
func NewMockPrometheusServiceInterface(ctrl *gomock.Controller) *MockPrometheusServiceInterface {
	mock := &MockPrometheusServiceInterface{ctrl: ctrl}
	mock.recorder = &MockPrometheusServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPrometheusServiceInterface) EXPECT() *MockPrometheusServiceInterfaceMockRecorder {
	return m.recorder
}

// InstantQuery mocks base method.
func (m *MockPrometheusServiceInterface) InstantQuery(arg0 string) (model.Value, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InstantQuery", arg0)
	ret0, _ := ret[0].(model.Value)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InstantQuery indicates an expected call of InstantQuery.
func (mr *MockPrometheusServiceInterfaceMockRecorder) InstantQuery(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InstantQuery", reflect.TypeOf((*MockPrometheusServiceInterface)(nil).InstantQuery), arg0)
}

// RangeQuery mocks base method.
func (m *MockPrometheusServiceInterface) RangeQuery(arg0 string, arg1, arg2 time.Time, arg3 time.Duration) (model.Value, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RangeQuery", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(model.Value)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RangeQuery indicates an expected call of RangeQuery.
func (mr *MockPrometheusServiceInterfaceMockRecorder) RangeQuery(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RangeQuery", reflect.TypeOf((*MockPrometheusServiceInterface)(nil).RangeQuery), arg0, arg1, arg2, arg3)
}
