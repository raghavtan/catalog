// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/motain/fact-collector/internal/services/configservice (interfaces: ConfigServiceInterface)

// Package configservice is a generated GoMock package.
package configservice

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockConfigServiceInterface is a mock of ConfigServiceInterface interface.
type MockConfigServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockConfigServiceInterfaceMockRecorder
}

// MockConfigServiceInterfaceMockRecorder is the mock recorder for MockConfigServiceInterface.
type MockConfigServiceInterfaceMockRecorder struct {
	mock *MockConfigServiceInterface
}

// NewMockConfigServiceInterface creates a new mock instance.
func NewMockConfigServiceInterface(ctrl *gomock.Controller) *MockConfigServiceInterface {
	mock := &MockConfigServiceInterface{ctrl: ctrl}
	mock.recorder = &MockConfigServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfigServiceInterface) EXPECT() *MockConfigServiceInterfaceMockRecorder {
	return m.recorder
}

// GetCompassCloudId mocks base method.
func (m *MockConfigServiceInterface) GetCompassCloudId() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCompassCloudId")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetCompassCloudId indicates an expected call of GetCompassCloudId.
func (mr *MockConfigServiceInterfaceMockRecorder) GetCompassCloudId() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCompassCloudId", reflect.TypeOf((*MockConfigServiceInterface)(nil).GetCompassCloudId))
}

// GetCompassHost mocks base method.
func (m *MockConfigServiceInterface) GetCompassHost() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCompassHost")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetCompassHost indicates an expected call of GetCompassHost.
func (mr *MockConfigServiceInterfaceMockRecorder) GetCompassHost() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCompassHost", reflect.TypeOf((*MockConfigServiceInterface)(nil).GetCompassHost))
}

// GetCompassToken mocks base method.
func (m *MockConfigServiceInterface) GetCompassToken() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCompassToken")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetCompassToken indicates an expected call of GetCompassToken.
func (mr *MockConfigServiceInterfaceMockRecorder) GetCompassToken() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCompassToken", reflect.TypeOf((*MockConfigServiceInterface)(nil).GetCompassToken))
}

// GetGithubOrg mocks base method.
func (m *MockConfigServiceInterface) GetGithubOrg() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGithubOrg")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetGithubOrg indicates an expected call of GetGithubOrg.
func (mr *MockConfigServiceInterfaceMockRecorder) GetGithubOrg() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGithubOrg", reflect.TypeOf((*MockConfigServiceInterface)(nil).GetGithubOrg))
}

// GetGithubUser mocks base method.
func (m *MockConfigServiceInterface) GetGithubUser() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGithubUser")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetGithubUser indicates an expected call of GetGithubUser.
func (mr *MockConfigServiceInterfaceMockRecorder) GetGithubUser() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGithubUser", reflect.TypeOf((*MockConfigServiceInterface)(nil).GetGithubUser))
}
