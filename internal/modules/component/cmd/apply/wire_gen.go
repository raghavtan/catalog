// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package apply

import (
	"github.com/google/go-github/v58/github"
	"github.com/google/wire"
	"github.com/motain/fact-collector/internal/modules/component/handler"
	"github.com/motain/fact-collector/internal/modules/component/repository"
	"github.com/motain/fact-collector/internal/services/compassservice"
	"github.com/motain/fact-collector/internal/services/configservice"
	"github.com/motain/fact-collector/internal/services/githubservice"
	"github.com/motain/fact-collector/internal/services/keyringservice"
)

// Injectors from wire.go:

func initializeHandler() *handler.ApplyHandler {
	configService := configservice.NewConfigService()
	keyringService := keyringservice.NewKeyringService()
	repositoriesService := githubservice.NewGitHubRepositoriesClient(configService, keyringService)
	gitHubRepositoriesService := githubservice.NewGitHubRepositoriesService(repositoriesService)
	graphQLClientInterface := compassservice.NewGraphQLClient(configService)
	httpClientInterface := compassservice.NewHTTPClient(configService)
	compassService := compassservice.NewCompassService(configService, graphQLClientInterface, httpClientInterface)
	repositoryRepository := repository.NewRepository(compassService)
	applyHandler := handler.NewApplyHandler(gitHubRepositoriesService, repositoryRepository)
	return applyHandler
}

// wire.go:

var ProviderSet = wire.NewSet(keyringservice.NewKeyringService, wire.Bind(new(keyringservice.KeyringServiceInterface), new(*keyringservice.KeyringService)), configservice.NewConfigService, wire.Bind(new(configservice.ConfigServiceInterface), new(*configservice.ConfigService)), compassservice.NewGraphQLClient, compassservice.NewHTTPClient, compassservice.NewCompassService, wire.Bind(new(compassservice.CompassServiceInterface), new(*compassservice.CompassService)), githubservice.NewGitHubRepositoriesClient, wire.Bind(new(githubservice.GitHubRepositoriesInterface), new(*github.RepositoriesService)), githubservice.NewGitHubRepositoriesService, wire.Bind(new(githubservice.GitHubRepositoriesServiceInterface), new(*githubservice.GitHubRepositoriesService)), repository.NewRepository, wire.Bind(new(repository.RepositoryInterface), new(*repository.Repository)), handler.NewApplyHandler)
