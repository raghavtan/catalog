# OBSERVABILITY METRICS
---
apiVersion: of-catalog/v1alpha1
kind: Metric
metadata:
  name: instrumentation-check
  labels:
    grading-system: observability
  componentType:
    - service
    - cloud-resource
  facts:
    all:
      - source: github
        uri: ""
        name: app-toml-exists
        repo: "${Spec.Name}"
        factType: fileExists
        filePath: app.toml
        regexPattern: ""
        jsonPath: ""
        repoProperty: ""
        reposSearchQuery: ""
        expectedValue: ""
        expectedFormula: ""
        auth: null
      - source: github
        uri: ""
        name: app-toml-envs-otel-service-name
        repo: "${Spec.Name}"
        factType: jsonPath
        filePath: app.toml
        regexPattern: ""
        jsonPath: $..envs..OTEL_SERVICE_NAME
        repoProperty: ""
        reposSearchQuery: ""
        expectedValue: "${Spec.Name}"
        expectedFormula: ""
        auth: null
      - source: "github"
        name: app-toml-env-otel-exporter-otlp-endpoint
        repo: "${Spec.Name}"
        factType: jsonPath
        filePath: app.toml
        jsonPath: $..envs..OTEL_EXPORTER_OTLP_ENDPOINT
        expectedValue: "otel-loadbalancer-internal.otel-loadbalancer.svc.cluster.local."
      - source: "github"
        name: app-toml-env-otel-resource-attributes-sampling
        repo: "${Spec.Name}"
        factType: jsonPath
        filePath: app.toml
        jsonPath: $..envs..OTEL_RESOURCE_ATTRIBUTES
        expectedValue: "of\\.sample_rate=\\d+.*"
      - source: "github"
        name: app-toml-env-otel-resource-attributes-tail-sampling-refinery
        repo: "${Spec.Name}"
        factType: jsonPath
        filePath: app.toml
        jsonPath: $..envs..OTEL_RESOURCE_ATTRIBUTES
        expectedValue: "of\\.tail_sampling=refinery"
spec:
  name: instrumentation-check
  description: "Check if the service is properly instrumented for observability"
  format:
    unit: "instrumented"
---
apiVersion: of-catalog/v1alpha1
kind: Metric
metadata:
  name: documentation-check
  labels:
    grading-system: observability
  componentType:
    - service
    - cloud-resource
  facts:
    all:
      - source: component
        uri: ""
        name: dashboard-links-exist
        repo: ""
        componentName: "${Spec.Name}"
        factType: jsonPath
        filePath: ""
        regexPattern: ""
        jsonPath: "length($.spec.links[?(@.type=='DASHBOARD')].url)
        repoProperty: ""
        reposSearchQuery: ""
        expectedValue: ""
        expectedFormula: ">= 1"
        auth: null
      - source: component
        uri: ""
        name: overview-link-exists
        repo: ""
        componentName: "${Spec.Name}"
        factType: jsonPath
        filePath: ""
        regexPattern: ""
        jsonPath: "length($.spec.links[?(@.type=='DOCUMENT' && @.name=='Overview')].url)"
        repoProperty: ""
        reposSearchQuery: ""
        expectedValue: ""
        expectedFormula: "== 1"
        auth: null
spec:
  name: documentation-check
  description: "Check"
  format:
    unit: "documented"
