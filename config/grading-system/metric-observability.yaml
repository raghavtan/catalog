# OBSERVABILITY METRICS
---
apiVersion: of-catalog/v1alpha1
kind: Metric
metadata:
  name: instrumentation-check
  labels:
    grading-system: observability
  componentType:
    - service
    - cloud-resource
  facts:
    all:
      - name: app-toml-envs-otel-service-name
        source: github
        repo: "${Metadata.Name}"
        factType: jsonPath
        filePath: app.toml
        jsonPath: $..envs..OTEL_SERVICE_NAME
        expectedValue: "${Metadata.Name}"
    any:
      - name: app-toml-env-otel-resource-attributes-sample-rate
        source: "github"
        repo: "${Metadata.Name}"
        factType: jsonPath
        filePath: app.toml
        jsonPath: $..envs..OTEL_RESOURCE_ATTRIBUTES
        expectedValue: "of\\.sample_rate=\\d+.*"
      - name: app-toml-env-otel-resource-attributes-error-sample-rate
        source: "github"
        repo: "${Metadata.Name}"
        factType: jsonPath
        filePath: app.toml
        jsonPath: $..envs..OTEL_RESOURCE_ATTRIBUTES
        expectedValue: "of\\.error_sample_rate=\\d+.*"
spec:
  name: instrumentation-check
  description: "Verifies that the component is set up to record relevant telemetry (metrics or traces)."
  format:
    unit: "Instrumentation Check"
---
apiVersion: of-catalog/v1alpha1
kind: Metric
metadata:
  name: critical-alerts-slo-check
  labels:
    grading-system: observability
  componentType:
    - service
  facts:
    all:
      - name: has-slos
        source: jsonapi
        uri: "https://api.eu1.honeycomb.io/1/slos/${Metadata.Name}"
        auth:
          header: X-Honeycomb-Team
          tokenEnvVariable: HONEYCOMB_API_KEY
        factType: jsonPath
        jsonPath: length($.)
        expectedFormula: ">= 1"
spec:
  name: critical-alerts-slo-check
  description: "Checks if at least one critical performance or reliability metric is actively monitored and triggers an alert (e.g., SLO or metric threshold)."
  format:
    unit: "Critical Alerts/SLO Check"
