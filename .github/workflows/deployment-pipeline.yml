name: Deployment Pipeline

on:
  push:
    paths-ignore:
      - '.of/**'
      - 'config/**'
      - 'docs/**'
      - '.state/**'
      - '.github/**'
      - 'Makefile'
    branches:
      - main

permissions:
  id-token: write
  contents: write
  actions: read

jobs:
  commit-cycle:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      GITHUB_TOKEN: ${{ secrets.PRIVATE_DEPENDENCIES_GITHUB_TOKEN}}
    outputs:
      version: ${{ github.sha }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"

      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - uses: motain/onefootball-actions/pvt-deps@master
        with:
          github-token: ${{ secrets.PRIVATE_DEPENDENCIES_GITHUB_TOKEN }}
      - uses: actions/cache@v4
        with:
          path: |
            vendor
            bin
          key: ${{ hashFiles('go.mod') }}

      - name: Install gnome-keyring
        run: |
          sudo apt-get update
          sudo apt-get install -y gnome-keyring dbus-x11

      - name: Start Secret Service
        run: |
          eval "$(dbus-launch --sh-syntax)"

          export DBUS_SESSION_BUS_ADDRESS
          echo "DBUS_SESSION_BUS_ADDRESS=$DBUS_SESSION_BUS_ADDRESS" >> $GITHUB_ENV

      - id: code-correctness
        run: |
          GOPRIVATE=github.com/motain go install "honnef.co/go/tools/cmd/staticcheck@latest" && \
          GOPRIVATE=github.com/motain go list ./...  | grep -v vendor/ | xargs -L1 staticcheck -f stylish -fail all -tests

      - id: unit-tests
        run: |
          export $(dbus-launch)
          export DBUS_SESSION_BUS_ADDRESS

          GOPRIVATE=github.com/motain go test -v -race -count=1 -tags unit ./...


      - uses: motain/slack-actions/cd/cycle-result@main
        if: ${{ always() }}
        with:
          slack-token: ${{ secrets.CONTINUOUS_DELIVERY_APP_SLACK_TOKEN }}
          channel: 'p-developer-xp-notifications'
          steps-context: ${{ toJson(steps) }}

  release-cycle:
    needs:
      - commit-cycle
    if: ${{ needs.commit-cycle.result == 'success' }}
    runs-on: ubuntu-latest
    concurrency:
      group: release-cycle
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"

      # - name: Install dependencies
      #   run: |
      #     apt-get update && apt-get install curl build-essential make -y

      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - uses: motain/onefootball-actions/pvt-deps@master
        with:
          github-token: ${{ secrets.PRIVATE_DEPENDENCIES_GITHUB_TOKEN }}
      - uses: actions/cache@v4
        with:
          path: |
            vendor
            bin
          key: ${{ hashFiles('go.mod') }}

      - id: install-project-dependencies
        run: go mod tidy

      - id: build-artifact
        run: |
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
          make build

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.SHORT_SHA }}
          name: Release ${{ github.ref_name }} -- ${{ env.SHORT_SHA }}
          draft: false
          prerelease: false
          files: |
            ./bin/linux/ofc
        env:
          GITHUB_TOKEN: ${{ secrets.PRIVATE_GH_TOKEN_RELEASE_WITH_ASSETS }}

      - uses: motain/slack-actions/cd/cycle-result@main
        if: ${{ always() }}
        with:
          slack-token: ${{ secrets.CONTINUOUS_DELIVERY_APP_SLACK_TOKEN }}
          channel: 'p-developer-xp-notifications'
          steps-context: ${{ toJson(steps) }}
