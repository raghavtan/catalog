apiVersion: of-catalog/v1alpha1
kind: Metric
metadata:
    name: deployment-readiness
    labels:
        grading-system: production-readiness
    componentType:
        - service
        - cloud-resource
    facts:
        all:
            - source: github
              uri: ""
              componentName: ""
              name: apptoml-file-exists
              repo: ${Metadata.Name}
              factType: fileExists
              filePath: app.toml
              regexPattern: ""
              jsonPath: ""
              repoProperty: ""
              reposSearchQuery: ""
              expectedValue: ""
              expectedFormula: ""
              auth: null
        any: []
        inspect: null
spec:
    id: ari:cloud:compass:fca6a80f-888b-4079-82e6-3c2f61c788e2:metric-definition/4d010f50-96c4-48c0-bab5-a3dd5112b464/cd578a1d-7337-4dcf-95cf-865c71ab3328
    name: deployment-readiness
    description: Ensures the component is correctly configured, adheres to best practices, and meets all necessary requirements for secure, stable, and efficient deployment in a production environment.
    format:
        unit: Deployment Readiness
---
apiVersion: of-catalog/v1alpha1
kind: Metric
metadata:
    name: high-availability
    labels:
        grading-system: resiliency
    componentType:
        - service
        - cloud-resource
    facts:
        all: []
        any:
            - source: github
              uri: ""
              componentName: ""
              name: app-toml-hpa-target-cpu
              repo: ${Metadata.Name}
              factType: jsonPath
              filePath: app.toml
              regexPattern: ""
              jsonPath: $..service..target_cpu_utilization_percentage
              repoProperty: ""
              reposSearchQuery: ""
              expectedValue: ""
              expectedFormula: '>= 20'
              auth: null
            - source: github
              uri: ""
              componentName: ""
              name: app-toml-hpa-target-memory
              repo: ${Metadata.Name}
              factType: jsonPath
              filePath: app.toml
              regexPattern: ""
              jsonPath: $..service..target_memory_utilization_percentage
              repoProperty: ""
              reposSearchQuery: ""
              expectedValue: ""
              expectedFormula: '>= 20'
              auth: null
        inspect: null
spec:
    id: ari:cloud:compass:fca6a80f-888b-4079-82e6-3c2f61c788e2:metric-definition/4d010f50-96c4-48c0-bab5-a3dd5112b464/037e1065-a621-4be2-8ea5-c11409fce886
    name: high-availability
    description: Ensure the component is properly configured to support High Availability, which keeps a system or service running with minimal downtime. This helps maintain continuous operation, even during failures or unexpected issues.
    format:
        unit: High Availability
---
apiVersion: of-catalog/v1alpha1
kind: Metric
metadata:
    name: adaptive-systems
    labels:
        grading-system: resiliency
    componentType:
        - service
        - cloud-resource
    facts:
        all: []
        any:
            - source: github
              uri: ""
              componentName: ""
              name: app-toml-liveness-probe
              repo: ${Metadata.Name}
              factType: jsonPath
              filePath: app.toml
              regexPattern: ""
              jsonPath: $..service..liveness_probe_http_get_path
              repoProperty: ""
              reposSearchQuery: ""
              expectedValue: /health
              expectedFormula: ""
              auth: null
            - source: github
              uri: ""
              componentName: ""
              name: app-toml-readiness-probe
              repo: ${Metadata.Name}
              factType: jsonPath
              filePath: app.toml
              regexPattern: ""
              jsonPath: $..service..readiness_probe_http_get_path
              repoProperty: ""
              reposSearchQuery: ""
              expectedValue: /ready
              expectedFormula: ""
              auth: null
        inspect: null
spec:
    id: ari:cloud:compass:fca6a80f-888b-4079-82e6-3c2f61c788e2:metric-definition/4d010f50-96c4-48c0-bab5-a3dd5112b464/4c8584d7-f606-437b-9854-02208be6d03f
    name: adaptive-systems
    description: Ensure the component is properly configured to support Adaptive Systems, which can automatically adjust to changing conditions. This helps maintain optimal performance, efficiency, and reliability without the need for manual intervention.
    format:
        unit: Adaptive Systems
---
apiVersion: of-catalog/v1alpha1
kind: Metric
metadata:
    name: instrumentation-check
    labels:
        grading-system: observability
    componentType:
        - service
        - cloud-resource
    facts:
        all:
            - source: github
              uri: ""
              componentName: ""
              name: app-toml-envs-otel-service-name
              repo: ${Metadata.Name}
              factType: jsonPath
              filePath: app.toml
              regexPattern: ""
              jsonPath: $..envs..OTEL_SERVICE_NAME
              repoProperty: ""
              reposSearchQuery: ""
              expectedValue: ${Metadata.Name}
              expectedFormula: ""
              auth: null
        any:
            - source: github
              uri: ""
              componentName: ""
              name: app-toml-env-otel-resource-attributes-sample-rate
              repo: ${Metadata.Name}
              factType: jsonPath
              filePath: app.toml
              regexPattern: ""
              jsonPath: $..envs..OTEL_RESOURCE_ATTRIBUTES
              repoProperty: ""
              reposSearchQuery: ""
              expectedValue: of\.sample_rate=\d+.*
              expectedFormula: ""
              auth: null
            - source: github
              uri: ""
              componentName: ""
              name: app-toml-env-otel-resource-attributes-error-sample-rate
              repo: ${Metadata.Name}
              factType: jsonPath
              filePath: app.toml
              regexPattern: ""
              jsonPath: $..envs..OTEL_RESOURCE_ATTRIBUTES
              repoProperty: ""
              reposSearchQuery: ""
              expectedValue: of\.error_sample_rate=\d+.*
              expectedFormula: ""
              auth: null
        inspect: null
spec:
    id: ari:cloud:compass:fca6a80f-888b-4079-82e6-3c2f61c788e2:metric-definition/4d010f50-96c4-48c0-bab5-a3dd5112b464/187e47eb-c4b9-4672-b675-b31902850cc4
    name: instrumentation-check
    description: Verifies that the component is set up to record relevant telemetry (metrics or traces).
    format:
        unit: Instrumentation Check
---
apiVersion: of-catalog/v1alpha1
kind: Metric
metadata:
    name: critical-alerts-slo-check
    labels:
        grading-system: observability
    componentType:
        - service
    facts:
        all:
            - source: jsonapi
              uri: https://api.eu1.honeycomb.io/1/slos/${Metadata.Name}
              componentName: ""
              name: has-slos
              repo: ""
              factType: jsonPath
              filePath: ""
              regexPattern: ""
              jsonPath: length($.)
              repoProperty: ""
              reposSearchQuery: ""
              expectedValue: ""
              expectedFormula: '>= 1'
              auth:
                header: X-Honeycomb-Team
                tokenEnvVariable: HONEYCOMB_API_KEY
        any: []
        inspect: null
spec:
    id: ari:cloud:compass:fca6a80f-888b-4079-82e6-3c2f61c788e2:metric-definition/4d010f50-96c4-48c0-bab5-a3dd5112b464/11840027-916d-4c9c-9548-2d499927c61f
    name: critical-alerts-slo-check
    description: Checks if at least one critical performance or reliability metric is actively monitored and triggers an alert (e.g., SLO or metric threshold).
    format:
        unit: Critical Alerts/SLO Check
---
apiVersion: of-catalog/v1alpha1
kind: Metric
metadata:
    name: organizational-standards
    labels:
        grading-system: production-readiness
    componentType:
        - service
        - cloud-resource
    facts:
        all:
            - source: github
              uri: ""
              componentName: ""
              name: app-toml-catalog-links-runbook
              repo: ${Metadata.Name}
              factType: jsonPath
              filePath: app.toml
              regexPattern: ""
              jsonPath: length($..catalog.links[?(@.type == 'DOCUMENT' && @.name == 'runbook')].url)
              repoProperty: ""
              reposSearchQuery: ""
              expectedValue: ""
              expectedFormula: == 1
              auth: null
            - source: github
              uri: ""
              componentName: ""
              name: readme-file-exists
              repo: ${Metadata.Name}
              factType: fileExists
              filePath: README.md
              regexPattern: ""
              jsonPath: ""
              repoProperty: ""
              reposSearchQuery: ""
              expectedValue: ""
              expectedFormula: ""
              auth: null
        any: []
        inspect: null
spec:
    id: ari:cloud:compass:fca6a80f-888b-4079-82e6-3c2f61c788e2:metric-definition/4d010f50-96c4-48c0-bab5-a3dd5112b464/1c1d8832-e60d-48b0-9217-60807c75571f
    name: organizational-standards
    description: Ensures the component is correctly configured, adheres to best practices, and meets all necessary requirements for secure, stable, and efficient deployment in a production environment.
    format:
        unit: Organizational Standards
